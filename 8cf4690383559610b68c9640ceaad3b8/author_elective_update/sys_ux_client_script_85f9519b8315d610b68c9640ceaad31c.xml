<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="DELETE">
        <controller_preset/>
        <includes/>
        <macroponent display_value="Default">81f9195b8315d610b68c9640ceaad346</macroponent>
        <name>MakeItDramatic</name>
        <preset/>
        <required_translations>[
    
]</required_translations>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    //wrapping everything in this to get the "window" context, which is equivalent to "this" in this context.
    //It's a sketchy workaround.
    helpers.timing.setTimeout(function() {

        let loops = api.state.loops;
        let delay = api.state.delay;
        let last = 0;

        let intervalId = helpers.timing.setInterval(theDrama, delay);

        // Create an audio context
        const audioContext = new(this.AudioContext || this.webkitAudioContext)();


        function theDrama() {
            let myEntries = JSON.parse(JSON.stringify(api.state.entries));

            // set a random value to true
            let rand = parseInt(Math.floor(Math.random() * myEntries.length));
            last = rand;

            myEntries[last].selected = false; // Clear the last selected
            myEntries[rand].selected = true; // select a new random item.

            //set new value to client state to trigger update.
            api.setState('entries', myEntries);
            playBeep(1200, delay);

            loops--;

            //Stop after loops expired
            if (loops < 1) {
                helpers.timing.clearInterval(intervalId);
            }
        }

        // Function to generate a beep sound with adjustable frequency and duration
        function playBeep(frequency = 800, duration = 100) {

                const oscillator = audioContext.createOscillator(); // Create an oscillator node
                const gainNode = audioContext.createGain(); // Create a gain node to control volume

                // Set up oscillator properties
                oscillator.type = 'square'; // Square wave works well for beep sounds
                oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);

                // Connect nodes: oscillator -> gain -> destination (speakers)
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);

                // Control the volume: start loud and fade out quickly
                gainNode.gain.setValueAtTime(1, audioContext.currentTime);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration / 1000);

                // Start and stop the beep sound
                oscillator.start();
                oscillator.stop(audioContext.currentTime + duration / 1000);
           
        }

    });
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>matt@pamtconsulting.com</sys_created_by>
        <sys_created_on>2024-10-22 12:50:35</sys_created_on>
        <sys_id>85f9519b8315d610b68c9640ceaad31c</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>MakeItDramatic</sys_name>
        <sys_package display_value="Drama" source="x_pamtn_drama">8cf4690383559610b68c9640ceaad3b8</sys_package>
        <sys_policy/>
        <sys_scope display_value="Drama">8cf4690383559610b68c9640ceaad3b8</sys_scope>
        <sys_update_name>sys_ux_client_script_85f9519b8315d610b68c9640ceaad31c</sys_update_name>
        <sys_updated_by>matt@pamtconsulting.com</sys_updated_by>
        <sys_updated_on>2024-10-22 12:50:35</sys_updated_on>
        <target>macroponent</target>
        <type>default</type>
    </sys_ux_client_script>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Drama">8cf4690383559610b68c9640ceaad3b8</application>
        <file_path/>
        <instance_id>ffaa9f54db2d11543050ac44d4961929</instance_id>
        <instance_name>ven05610</instance_name>
        <name>sys_ux_client_script_85f9519b8315d610b68c9640ceaad31c</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ux_client_script"&gt;&lt;sys_ux_client_script action="INSERT_OR_UPDATE"&gt;&lt;controller_preset/&gt;&lt;includes/&gt;&lt;macroponent display_value="Default"&gt;81f9195b8315d610b68c9640ceaad346&lt;/macroponent&gt;&lt;name&gt;MakeItDramatic&lt;/name&gt;&lt;preset/&gt;&lt;required_translations&gt;[
    
]&lt;/required_translations&gt;&lt;script&gt;&lt;![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 * @param {ApiHelpers} params.helpers
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    //wrapping everything in this to get the "window" context, which is equivalent to "this" in this context.
    //It's a sketchy workaround.
    helpers.timing.setTimeout(function() {

        let loops = api.state.loops;
        let delay = api.state.delay;
        let last = 0;

        let intervalId = helpers.timing.setInterval(theDrama, delay);

        // Create an audio context
        const audioContext = new(this.AudioContext || this.webkitAudioContext)();


        function theDrama() {
            let myEntries = JSON.parse(JSON.stringify(api.state.entries));

            // set a random value to true
            let rand = parseInt(Math.floor(Math.random() * myEntries.length));
            last = rand;

            myEntries[last].selected = false; // Clear the last selected
            myEntries[rand].selected = true; // select a new random item.

            //set new value to client state to trigger update.
            api.setState('entries', myEntries);
            playBeep(1200, delay);

            loops--;

            //Stop after loops expired
            if (loops &lt; 1) {
                helpers.timing.clearInterval(intervalId);
            }
        }

        // Function to generate a beep sound with adjustable frequency and duration
        function playBeep(frequency = 800, duration = 100) {

                const oscillator = audioContext.createOscillator(); // Create an oscillator node
                const gainNode = audioContext.createGain(); // Create a gain node to control volume

                // Set up oscillator properties
                oscillator.type = 'square'; // Square wave works well for beep sounds
                oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);

                // Connect nodes: oscillator -&gt; gain -&gt; destination (speakers)
                oscillator.connect(gainNode);
                gainNode.connect(audioContext.destination);

                // Control the volume: start loud and fade out quickly
                gainNode.gain.setValueAtTime(1, audioContext.currentTime);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration / 1000);

                // Start and stop the beep sound
                oscillator.start();
                oscillator.stop(audioContext.currentTime + duration / 1000);
           
        }

    });
}]]&gt;&lt;/script&gt;&lt;script_api_version&gt;2.0.0&lt;/script_api_version&gt;&lt;sys_class_name&gt;sys_ux_client_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;matt@pamtconsulting.com&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-10-22 12:50:35&lt;/sys_created_on&gt;&lt;sys_id&gt;85f9519b8315d610b68c9640ceaad31c&lt;/sys_id&gt;&lt;sys_mod_count&gt;1&lt;/sys_mod_count&gt;&lt;sys_name&gt;MakeItDramatic&lt;/sys_name&gt;&lt;sys_package display_value="Drama" source="x_pamtn_drama"&gt;8cf4690383559610b68c9640ceaad3b8&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Drama"&gt;8cf4690383559610b68c9640ceaad3b8&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ux_client_script_85f9519b8315d610b68c9640ceaad31c&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;matt@pamtconsulting.com&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-10-22 12:50:35&lt;/sys_updated_on&gt;&lt;target&gt;macroponent&lt;/target&gt;&lt;type&gt;default&lt;/type&gt;&lt;/sys_ux_client_script&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1944301688</payload_hash>
        <record_name>MakeItDramatic</record_name>
        <reverted_from/>
        <source>4cf4614383559610b68c9640ceaad376</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>matt@pamtconsulting.com</sys_created_by>
        <sys_created_on>2024-10-22 12:50:35</sys_created_on>
        <sys_id>85f9519b8315d610b68c9640ceaad31e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>192b447793c0000001</sys_recorded_at>
        <sys_updated_by>matt@pamtconsulting.com</sys_updated_by>
        <sys_updated_on>2024-10-22 12:50:35</sys_updated_on>
        <type>UX Client Script</type>
        <update_guid>49f9519bc715d610229deb338101b81d</update_guid>
        <update_guid_history>49f9519bc715d610229deb338101b81d:-1944301688</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>matt@pamtconsulting.com</sys_created_by>
        <sys_created_on>2024-10-22 12:53:32</sys_created_on>
        <sys_db_object display_value="" name="sys_ux_client_script">sys_ux_client_script</sys_db_object>
        <sys_id>51384146f3e64b50b8aed053751c63a1</sys_id>
        <sys_metadata>85f9519b8315d610b68c9640ceaad31c</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>MakeItDramatic</sys_name>
        <sys_package display_value="Drama" source="x_pamtn_drama">8cf4690383559610b68c9640ceaad3b8</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="Drama">8cf4690383559610b68c9640ceaad3b8</sys_scope>
        <sys_scope_delete display_value="">484c8c36534d4f158c45d9d24f5a9889</sys_scope_delete>
        <sys_update_name>sys_ux_client_script_85f9519b8315d610b68c9640ceaad31c</sys_update_name>
        <sys_update_version display_value="sys_ux_client_script_85f9519b8315d610b68c9640ceaad31c">85f9519b8315d610b68c9640ceaad31e</sys_update_version>
        <sys_updated_by>matt@pamtconsulting.com</sys_updated_by>
        <sys_updated_on>2024-10-22 12:53:32</sys_updated_on>
    </sys_metadata_delete>
</record_update>
